---
import {
  isCurationResponse,
  type OpenProcessingCurationResponse,
} from "@/src/api/OpenProcessing";
import type { CollectionEntry } from "astro:content";
import GridItemReference from "@components/GridItem/Reference.astro";
import GridItemExample from "@components/GridItem/Example.astro";
import GridItemEvent from "@components/GridItem/Event.astro";
import GridItemSketch from "@components/GridItem/Sketch.astro";

interface Props {
  title: string;
  items: Array<
    | CollectionEntry<"reference" | "examples" | "events">
    | OpenProcessingCurationResponse[number]
  >;
  class?: string;
}

const { title, items, class: className } = Astro.props;
---

<div>
  <hr />
  <section class={className}>
    <h2>{title}</h2>
    <ul class="content-grid-simple">
      {items.map((i) => {
        if (isCurationResponse(i)) {
          return (
            <li>
              <GridItemSketch item={i} />
            </li>
          );
        }
        switch (i.collection) {
          case "reference":
            return (
              <li>
                <GridItemReference item={i} />
              </li>
            );
          case "examples":
            return (
              <li>
                <GridItemExample item={i} />
              </li>
            );
          case "events":
            return (
              <li>
                <GridItemEvent item={i} />
              </li>
            );
        }
      })}
    </ul>
  </section>
</div>
