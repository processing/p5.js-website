---
import BaseLayout from "@layouts/BaseLayout.astro";
import Head from "@components/Head/index.astro";
import { getCurrentLocale, getUiTranslator } from "../i18n/utils";
import { setJumpToState } from "../globals/state";
import FreeRatioImage from "@components/Image/FreeRatioImage.astro";
import CodeBlockWrapper from "@components/CodeBlockWrapper/index.astro";
import LinkWrapper from "@components/LinkWrapper/index.astro";
import RelatedItems from "@components/RelatedItems/index.astro";
import {
  generateJumpToState,
  getRelatedEntriesinCollection,
} from "../pages/_utils";

const { entry } = Astro.props;
const { Content, components } = await entry.render();

const currentLocale = getCurrentLocale(Astro.url.pathname);
const t = await getUiTranslator(currentLocale);

const jumpToState = await generateJumpToState(
  "tutorials",
  entry.slug,
  "Tutorials",
  t,
  currentLocale
);

setJumpToState(jumpToState);

const relatedReferences =
  entry.data.relatedContent?.references !== undefined
    ? await getRelatedEntriesinCollection(
        "reference",
        currentLocale,
        entry.data.relatedContent.references.map((r: any) => r.slug)
      )
    : [];
const relatedExamples =
  entry.data.relatedContent?.examples !== undefined
    ? await getRelatedEntriesinCollection(
        "examples",
        currentLocale,
        entry.data.relatedContent.examples.map((r: any) => r.slug)
      )
    : [];
---

<Head
  title={entry.data.title}
  locale={currentLocale}
  description={entry.data.authors.join(", ")}
  featuredImageSrc={entry.data.featuredImage.src}
/>

<BaseLayout
  title={entry.data.title}
  titleClass=""
  subtitle={null}
  variant="item"
  topic="tutorials"
  className="tutorials"
>
  {entry.data.authors && <h6>By {entry.data.authors.join(", ")}</h6>}
  {entry.data.authorsNote && <h7>{entry.data.authorsNote}</h7>}
  <div class="rendered-markdown">
    <Content
      components={{
        ...components,
        img: FreeRatioImage,
        pre: CodeBlockWrapper,
        a: LinkWrapper,
      }}
    />
  </div>

  <div class="grid gap-y-lg mt-2xl">
    {
      relatedReferences.length > 0 && (
        <RelatedItems
          title={t("Related References") as string}
          items={relatedReferences}
        />
      )
    }
    {
      relatedExamples.length > 0 && (
        <RelatedItems
          title={t("Related Examples") as string}
          items={relatedExamples}
        />
      )
    }
  </div>
</BaseLayout>
