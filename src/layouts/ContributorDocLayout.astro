---
import type { CollectionEntry } from "astro:content";
import BaseLayout from "./BaseLayout.astro";
import Head from "@components/Head/index.astro";
import type { MarkdownHeading } from "astro";
import {
  setJumpToState,
  type JumpToLink,
  type JumpToState,
} from "../globals/state";
import { getCurrentLocale, getUiTranslator } from "../i18n/utils";

interface Props {
  entry: CollectionEntry<"contributor-docs">;
}

const currentLocale = getCurrentLocale(Astro.url.pathname);
const t = await getUiTranslator(currentLocale);

const { entry } = Astro.props;
const { Content, headings } = await entry.render();

const jumpToLinks = headings
  .filter((heading: MarkdownHeading) => heading.depth <= 3)
  .map((heading: MarkdownHeading) => ({
    label: heading.text,
    url: `#${heading.slug}`,
  }));

const jumpToState = {
  links: jumpToLinks as JumpToLink[],
  heading: t("Contributor Docs"),
} as JumpToState;

setJumpToState(jumpToState);
---

<Head title={entry.data.title} locale={currentLocale} />

<BaseLayout
  title={entry.data.title}
  variant="item"
  subtitle={null}
  topic="contribute"
  className="contribute"
>
  <section class="rendered-markdown">
    <Content />
  </section>
</BaseLayout>
